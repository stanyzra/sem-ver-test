name: Update tag on merge

on:
  pull_request:
    types: closed
    branches:
      - development
      - main

jobs:
  update_tag:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Determine branch name
        id: determine-branch-name
        run: echo "BRANCH_NAME=$(echo $GITHUB_REF | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

      - name: PR merged in main
        id: main_versioning
        if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: ""
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
        
      - name: PR merged in development
        id: development_versioning
        if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'development' }}
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: ""
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}-RC.${increment}"
        
      - name: Create version tag
        if: ${{ github.event.pull_request.merged == true }}
        run: |
          git config --local user.email "stanyhelberth@gmail.com"
          git config --local user.name "Collec_CICD"
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            echo "NEW_TAG=$(echo ${{ steps.main_versioning.outputs.version }})" >> $GITHUB_ENV
            git tag -a ${{ steps.main_versioning.outputs.version }} -m "New Version from ${{ github.event.pull_request.head.ref }} to ${{ github.event.pull_request.base.ref }}: ${{ steps.main_versioning.outputs.version }}"
            git push origin ${{ steps.main_versioning.outputs.version }}
          elif [[ "${{ env.BRANCH_NAME }}" == "development" ]]; then
            NEW_TAG=$(./sum_increment.sh ${{ steps.development_versioning.outputs.increment }} ${{ steps.development_versioning.outputs.version }})
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
            git tag -a $NEW_TAG -m "New Version from ${{ github.event.pull_request.head.ref }} to ${{ github.event.pull_request.base.ref }}: $NEW_TAG"
            git push origin $NEW_TAG
          fi

      - name: Upload Tag Artifact
        if: ${{ github.event.pull_request.merged == true }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: tag-artifact
          path: ${{ env.NEW_TAG }}